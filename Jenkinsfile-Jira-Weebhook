import groovy.json.JsonSlurper
pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh '/usr/local/bin/node -v'
            }
        }
        stage('Test') { 
            steps {
                sh 'echo my first jenkinsfile'
            }
        }
        stage('Update Status') {
            steps {
                script {
                    def issueKey = "jir-1"

                    if (issueKey) {
                        // Define the new status
                        def newStatus = "Done"

                        // Update status using REST API
                        def transitionId = getTransitionId(issueKey, newStatus)
                        println "Transition ID for ${newStatus}: ${transitionId}"

                        if (transitionId != null) {
                            def response = sh(script: "curl -u jira:jira -X POST -H 'Content-Type: application/json' -d '{\"transition\": {\"id\": \"${transitionId}\"}}' http://172.17.0.2:8080/rest/api/2/issue/${issueKey}/transitions", returnStdout: true)
                            println "Response: ${response}"
                        } else {
                            println "Transition ID not found for ${newStatus}."
                        }
                    } else {
                        println "Issue key not found in commit message."
                    }
                }
            }

        }
    }
}

def getTransitionId(issueKey, statusName) {
    def response = sh(script: "curl -u jira:jira -X GET -H 'Content-Type: application/json' http://172.17.0.2:8080/rest/api/2/issue/${issueKey}/transitions", returnStdout: true).trim()
    def jsonSlurper = new JsonSlurper()
    def transitions = jsonSlurper.parseText(response)

    println "All Transitions: ${transitions}"

    for (transition in transitions.transitions) {
        println "Transition: ${transition}"
        if (transition.to.name == statusName) {
            return transition.id
        }
    }

    return null
}
